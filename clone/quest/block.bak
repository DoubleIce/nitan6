// 玩家任务：block.c

// 设计思路：
// 任务初始化时设定开始攻击时间time_to_attack，
// 根据心跳，到了时间开始派出 NPC 攻击，NPC只要
// 不在战斗中就会尝试往关内行进。第一轮攻击过后
// 重新设定time_to_attack，到了时间开始第二轮攻
// 击。如此往复，直至达到定义的攻击轮数为止。

#include <ansi.h>
#include <quest.h>

inherit QUEST_OB;

#define ROUND           my["round"]     // 当前的攻击轮数
#define MAX_ROUND       my["max_round"] // 最大的攻击轮数
#define TIME            my["time"]      // 下一轮攻击的时间

int create_attacker(int num);

int filter_listener(object ob)
{
        if( query("env/no_story", ob))return 0;
        return 1;
}

// 任务对象创建
void create()
{
        seteuid(getuid());
        
        // 每 10 秒检查一次
        set_heart_beat(5);
        setup();
}

void init_quest()
{
        mapping my;

        my = query_entire_dbase(); 
        // 初始化攻击时间(1分钟左右以后)
        TIME = time() + 30 + random(30);
        // 初始化攻击轮数
        ROUND = 0;
        MAX_ROUND = 18;
}

void heart_beat()
{
        mapping my;
        object *listeners;

        my = query_entire_dbase(); 
        if (! TIME || time() < TIME)
                return;

        if (ROUND > MAX_ROUND)
                return;
                
        catch(create_attacker(21 + random(21)));
        ROUND += 1;

        // BOSS 出场
        if (ROUND == MAX_ROUND)
        {
                STORY_D->start_story("yanmen2");
                return;
        }
        listeners = filter_array(users(), (: filter_listener :));
        // message("story", STORY_DIR + "yanmen1.c"->prompt() + WHT +
        message("story", HIY "【武林传奇】" NOR + WHT +
                         (random(2) ? "只听得的的马蹄之声，一队契丹武士手执长矛"
                                    : "只见一队契丹武士挥舞着长矛，指指点点，") +
                         "来到了雁门关外。\n" + NOR, listeners);
}

int create_attacker(int num)
{
        int i;
        int count;
        object aob;
        string *msg = ({ "挥舞着长矛，大摇大摆的走了过来。\n",
                         "骑着在一匹马上走了过来。\n",
                         "耀武扬威的举着长矛走了过来。\n",
                         "嘴里嘟囔着什么走了过来。\n",
                         "脸上带着奸笑，走了过来。\n", });

        for (i = 0; i < num + 1; i++)
        {
               aob = new("/clone/npc/attacker");
               aob->move("/d/yanmen/luanshi1");

               message_vision("$N" NOR + msg[random(sizeof(msg))], aob);
               count++;
        }
        return count;
}

// 这个任务可以被某人知晓吗？
int can_know_by(object knower)
{
        // 江湖大事，人人可知
        return 1;
}
